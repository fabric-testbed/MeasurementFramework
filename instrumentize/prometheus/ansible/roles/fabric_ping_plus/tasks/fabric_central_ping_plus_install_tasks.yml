---
# Install the central metrics.


# Sanity Check
# - pause:
#     prompt: "!!!!!!!!!!!!!Setting up Central Metrics Install {{ install_name }} at {{ ansible_host }}. Hit enter to continue.!!!!!!!!!!!!!"

- name: Sanity Check
  debug: 
    msg: "!!!!!!!!!!!!!Setting up Central Metrics Ping Plus Install {{ install_name }} at {{ ansible_host }}. Hit enter to continue.!!!!!!!!!!!!!"



- name: Install docker Python SDK
  ansible.builtin.pip:
    name: docker 
    executable: pip3
    state: present
  become: yes

# needed on remote for htpasswd
- name: passlib
  ansible.builtin.pip: 
    # bycrypt is no longer needed -  mdf is being used instead. encrypted starts with $apr1$
    name: passlib
    executable: pip3
    state: present
  become: yes

# # May need this to get to host node exporter
# # Add extra host to Prometheus Container
# - name: set_etc_var
#   # Create etc/hosts entries in the Prometheus Container for the rack nodes that will have node exporters running. This makes labeling in Grafaan easier.
#   set_fact:
#     extra_node_hosts: "{{ extra_node_hosts | combine({ hostvars[item].hostname : hostvars[item].ansible_host }) }}"
#   with_items: "{{ # groups[hank_name] }}"


####################     
#      USER        #
####################
- name: Setup user for promtheus monitoring system
  # Create a user to setup all the fab monitoring stuff under.
  # Get user uid:gid and set to vars
  include_tasks: setup_tasks/create_prom_user_tasks.yml


# - name: show IPv6 
#   debug:
#     msg: "{{ ansible_facts.all_ipv6_addresses }}"


    

####################
# Create Base Dirs #
####################
- name: Create base install directories
  file:
    path: "{{ base_install_dir }}"
    recurse: yes
    state: directory
    owner: "{{ prom_user_name }}"
    group: "{{ prom_group_name }}"
  become: yes

- name: Create base data directorie 
  file:
    path: "{{ base_data_dir }}"
    recurse: yes
    state: directory
    owner: "{{ prom_user_name }}"
    group: "{{ prom_group_name }}"
  become: yes

####################
# SELF-SIGNED CERTS#
####################
# Only need this if we are testing and don't have TLS certs on the node.
# - name: Self-signed certs.
#   include_tasks: setup_tasks/self_signed_cert_tasks.yml
#   when:
#     - self_signed_cert_dir is defined


####################
#  DOCKER NETWORK  #
####################
# note that taking down the network may affect other containers added by other scripts 
- name: Setup the docker network to be used by the monitoring containers.
  include_tasks: setup_tasks/setup_docker_ipv6_network_tasks.yml


####################
#   PROMETHEUS     #
####################
# Prometheus consists of several tasks that must be done.
- name: Prometheus Setup
  block:
  - name: Setup Prometheus Directories
    include_tasks: Prometheus/setup_prometheus_directories_tasks.yml
  
  - name: Setup Promtheus Config Files via templates
    include_tasks: Prometheus/add_prometheus_config_templates.yml
    # See vars for templates used
    
  - name: Setup Promtheus Config Files via files
    include_tasks: Prometheus/add_prometheus_config_files.yml
    # See vars for files used

  - name: Prometheus Alert Rules
    include_tasks: Prometheus/add_alert_rules.yml
    # See vars for files used

  - name: Setup Prometheus Secrets
    include_tasks: Prometheus/add_prometheus_secrets.yml


####################
#     THANOS       #
####################
- name: Setup Thanos
  block:
    - name: Thanos Directories
      include_tasks: Thanos/setup_thanos_directories_tasks.yml
  
    - name: Thanos Configs
      include_tasks: Thanos/add_thanos_config_templates_tasks.yml
      # See vars for templates used


####################
# SNMP EXPORTER    #
####################
### Not currently needed on Central ###
# - name: Setup SNMP Exporter
#   block:
#     - name: SNMP Directories
#       include_tasks: SNMPExporter/setup_snmp_directories_tasks.yml
    
#     - name: SNMP Config 
#       include_tasks: SNMPExporter/add_snmp_config_templates_tasks.yml

#     # OR
      
#     - name: SNMP Config from fragments 
#       include_tasks: SNMPExporter/combine_snmp_config_task.yml
      
#     - name: SNMP Container 
#       include_tasks: SNMPExporter/snmp_exporter_container_tasks.yml

####################
# BLACKBOX EXPORTER #
####################
- name: Setup Blackbox EXPORTER
  block:
    - name: Blackbox Directories 
      include_tasks: Blackbox/setup_blackbox_directories_tasks.yml

    - name: Blackbox Config 
      include_tasks: Blackbox/config_blackbox_tasks.yml

# ####################
# # DOCKER EXPORTER  #
# ####################
# Nothing to setup, just use the docker-compose fragment

####################
#     NGINX        #
####################
- name: Setup Nginx
  block:
    # Directories
    - name: Nginx Directories
      include_tasks: Nginx/setup_nginx_directories_tasks.yml

    # Config files
    - name: Nginx Configs
      include_tasks: Nginx/config_nginx_tasks.yml

          
    # Add user to htaccess file
    # note htpasswd requires passlib to be installed on remote
    #- name: Nginx htaccess user
    #  include_tasks: Nginx/add_user_to_htaccess_tasks.yml
    - name: Nginx htaccess users   
      include_tasks: Nginx/add_users_to_htaccess_tasks.yml
      
    # Confd server files
    - name: Nginx Add Confd  Files
      include_tasks: Nginx/confd_nginx_tasks.yml
