---
# This file contains the common default variables that are the same for all racks.

# empty value to be filled in later if needed
extra_node_hosts: {}

install_node_exporters: yes


install_name: fabric_prometheus
docker_network_name: "{{ install_name }}"
base_data_dir: "/opt/data/{{ install_name }}"
base_install_dir: "/opt/{{ install_name }}" 

#hostname: "{{ hank_name }}.fabric-testbed.net"
host_cert: "/etc/ssl/certs/{{ hank_name }}-hn_fabric-testbed_net.pem"
host_key: "/etc/pki/tls/private/{{ hank_name }}-hn_fabric-testbed_net.key"
host_interm_cert: "/etc/pki/tls/certs/{{ hank_name }}-hn_fabric-testbed_net_interm.cer"

prom_user_name: fab-prom
prom_group_name: fab-prom
    

docker_ipv6_subnet: fd8d:73ee:3857:1315::/64
docker_ipv6_gateway: fd8d:73ee:3857:1315::1


####################
#      Ports       #
####################
# In case we need to eliminate conficts
alertmanager_port: 9093    

####################
#    Prometheus    #
####################
prometheus_files_dir: files
prometheus_templates_dir: templates/Prometheus
        
prometheus_config_template_files: 
  - prometheus_config.yml

  # node exporters for local rack
  - rack_node_targets.yml

  # for blackbox targets
  - local_rack_ping_targets.yml
  
  # snmp exporters for rack devices
  - base_snmp_targets.yml

# Note empty list var must have [] Without that is is considered a list of one empty string which then causes the entire directory to be copied instead of nothing.  
# See add_promethues_config_files.yml task.
# This was formerly used to copy alert_rules.
prometheus_config_files: []

 
alert_rule_file_dir: files/alert_rules

# Default alert rules for a rack
alert_rule_files:
  - dns_alert_rules.yml
  - docker_alert_rules.yml
  - mail_alert_rules.yml
  - network_alert_rules.yml
  - node_alert_rules.yml
  - prometheus_alert_rules.yml
 # - ssl_alert_rules.yml
  - time_alert_rules.yml
  # vpn ping only needed on uky/renc racks but do no harm if on others
  - vpn_ping_alert_rules.yml
 # - web_site_alert_rules.yml


recording_rule_file_dir: files/recording_rules

# Default recording rules for a rack
recording_rule_files:
  - isis_rules.yml


####################
# Container States #
####################

# snmp_state: absent
# blackbox_state: absent
# docker_exporter_state: absent
# prometheus_state: absent
# nginx_state: absent
# thanos_sidecar_state absent


snmp_state: started
blackbox_state: started
docker_exporter_state: started
prometheus_state: started
nginx_state: started
thanos_sidecar_state: started

####################
#   Alertmanager   #
####################
#alertmanager_url: 192.128.12.238:9093
alertmanager_url: metrics.fabric-testbed.net:9093

####################
#      Thanos      #
####################
thanos_templates_dir: templates/Thanos
thanos_config_templates:
  - object_store_config.yml
  # NOTE needs the CEPH vars contained in *_private_vars.yml

thanos_cert: "{{ host_cert }}"
thanos_key: "{{ host_key }}"
thanos_interm_cert: "{{ host_interm_cert }}"

thanos_sidecar_ip: "{{ hn_public_ipaddr }}"
thanos_sidecar_cert: "{{ thanos_cert }}"
thanos_sidecar_key: "{{ thanos_key }}"

####################
#       SNMP       #
####################

# NOTE community string is a per rack variable and is contained in *_private_vars.yml

snmp_templates_dir: templates/SNMP
snmp_config_template_files: 
  #- snmp.yml
  # changing to fragments
  - if_mib.yml
  - isis.yml
  - pdu.yml 
  - tmi_ptu.yml
  # SNMP will probably be the same for all racks

####################
#    Blackbox      # 
####################
blackbox_files_dir: files
#blackbox_templates_dir: templates


####################
#      NGINX       #
####################        

nginx_ip_ports:
  # Note Each port will correspond to a confd file set above.
  #- 80:80         # Redirected to 443
  #- 443:443       # /grafana for grafana interface
  # localhost only - 127.0.0.1:9090:9090     # prometheus stats
  #- 9090:9090 #prometheus stats
  - "{{ ansible_host }}:9090:9090"  #open port will be restricted by to operations network
  #- "{{ hn_public_ipaddr }}:9090:9090"  #open port will be restricted by iptables to central metric
  #- "[{{ hn_public_ipaddr_ipv6 }}]:9090:9090"  # for dual stack racks - #open port will be restricted by iptables to central metric
  #- 10922:10922   # thanos stats
  #- "{{ alertmanager_port }}:{{ alertmanager_port }}"    # alertmanager 



nginx_template_dir: templates/Nginx

nginx_server_confd_template_files: 
  
  # for private setup
  #- prometheus_localhost.conf
  # For dual stack racks
  - prometheus_dual_public.conf


nginx_config_template_files:
  - ssl_snippet.conf
  - nginx.conf

nginx_cert: "{{ host_cert }}"
nginx_key: "{{ host_key }}"
nginx_interm_cert: "{{ host_interm_cert }}"



####################
#  Node Exporter   #
####################        


node_exporter_tls_server_config:
  cert_file: /etc/node_exporter/tls.cert
  key_file: /etc/node_exporter/tls.key
node_exporter_web_listen_address: "{{ ansible_host }}:9100"


# add in all optional exporters except for perf and tcpstat which can cause high load problems
# also skip wifi
#node_exporter_enabled_collectors: [buddyinfo, devstat, drbd, interrupts, ksmd, logind, meminfo_numa, mountstats, ntp, processes, qdisc, runit, supervisord, systemd]

#node_exporter_enabled_collectors:
  #- wifi # not on worker nodes
  #- tcpstat # may have performance issues with high loads
  #- perf # may cause high load, dependant on kernel configuration and settings
  #- devstat # only on freebsd
  #- ntp # not using ntp

  # #- interrupts # creates lots series
  # - buddyinfo
  # - drbd
  # - ksmd
  # # - logind # produces lots of series 
  # - meminfo_numa
  # - mountstats
  # - processes
  # - qdisc
  # - runit
  # - supervisord
  # - systemd # produces lots of series

# to make use of the textfile collector the directory must be set to a directory with write permissions enabled for node-exp
# node_exporter_textfile_dir: "/var/lib/node_exporter"

# optionally disable some collectors
# node_exporter_disabled_collectors: []


