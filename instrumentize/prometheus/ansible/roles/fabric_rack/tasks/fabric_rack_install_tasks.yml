---



# - name: Install docker Python SDK
#   ansible.builtin.pip:
#     name: docker 
#     executable: pip3
#     state: present
#   become: yes

# # - name: Install requests for Python docker SDK
# #   ansible.builtin.pip:
# #     name: requests 
# #     executable: pip3.9
# #     state: absent


# # needed on remote for htpasswd
# - name: passlib
#   #become: yes 
#   ansible.builtin.pip: 
#     # bycrypt is no longer needed -  mdf is being used instead. encrypted starts with $apr1$
#     name: passlib
#     executable: pip3
#     state: present
#   become: yes


# Sanity Check
# - name: Sanity Check
#   pause:
#     prompt: "!!!!!!!!!!!!!Setting up Fabric Rack Install {{ install_name }} on {{ hank_name }} at {{ ansible_host }}. Hit enter to continue.!!!!!!!!!!!!!"

- name: Sanity Check
  debug:
    msg: "!!!!!!!!!!!!!Setting up Fabric Rack Install {{ install_name }} on {{ hank_name }} at {{ ansible_host }}.!!!!!!!!!!!!!"

- name: Files Check 
  debug:
    msg: "Alert Files are: {{ item }}"
  with_items: "{{ alert_rule_files }}"

# needed on remote for htpasswd
- name: passlib
  become: yes 
  pip: 
    name: passlib[bcrypt]
    executable: pip3 
    state: present

# Add extra host to Prometheus Container
- name: set_etc_var
  # Create etc/hosts entries in the Prometheus Container for the rack nodes that will have node exporters running. This makes labeling in Grafaan easier.
  set_fact:
    extra_node_hosts: "{{ extra_node_hosts | combine([{ hostvars[item].hostname : hostvars[item].ansible_host }]) }}"
  with_items: "{{ groups[hank_name] }}"

####################     
#      USER        #
####################
- name: Setup user for promtheus monitoring system
  # Create a user to setup all the fab monitoring stuff under.
  include_tasks: setup_tasks/create_prom_user_tasks.yml



##############################
#  Stop the Docker Compose   #
##############################

- name: Stop Docker Compose 
  block:
  - name: Check if docker-compose.yml exists 
    stat: 
      path: "{{ base_install_dir }}/docker-compose.yml"
    register: docker_compose_file_status

  - name: Stop Docker compose file
    shell: docker-compose down 
    args:
      chdir: "{{ base_install_dir }}"
    when: docker_compose_file_status.stat.exists



####################
#  DOCKER NETWORK  #
####################
# note that taking down the network may affect other containers added by other scripts 
- name: Takedown the docker network to be used by the monitoring containers.
  include_tasks: takedown_tasks/remove_docker_network_tasks.yml



# only use ipv4 docker network if there is no ipv6
# if there is ipv6 then docker will also create ipv4 network


# ipv4
- name: Setup the docker network to be used by the monitoring containers.
  include_tasks: setup_tasks/setup_docker_network_tasks.yml
  when:
    - network_layer['host']['ipv6'] == ""
    - network_layer['host']['ipv4'] == "v4"  

# OR
# ipv6 dual network settings
- name: Setup the docker network to be used by the monitoring containers.
  # regression error -- include_tasks: setup_tasks/setup_docker_dual_network_tasks.yml
  include_tasks: setup_tasks/setup_docker_ipv6_network_tasks.yml
  when:
    - network_layer['host']['ipv6'] == "v6"

  
####################
# Backup all base install directories #
####################
- name: Backup base install directories
  include_tasks: takedown_tasks/backup_base_install_dir_tasks.yml
  when:
    - hank_name == 'uky' or hank_name == 'renc'
    # NOTE hardcoded here to back up dev racks since they may be manipulated by hand
    # All other racks should never have any non ansible installed code so deleteing it all is fine.
    


# ####################
# # Remove all base install directories #
# ####################
- name: Remove base install directories
  include_tasks: takedown_tasks/remove_base_install_dirs_tasks.yml


####################
#   PROMETHEUS     #
####################
# Prometheus consists of several tasks that must be done.
- name: Prometheus Setup
  block:
  - name: Setup Prometheus Directories
    include_tasks: Prometheus/setup_prometheus_directories_tasks.yml
  
  - name: Setup Promtheus Config Templates
    include_tasks: Prometheus/add_prometheus_config_templates.yml
    # See vars for templates used

  - name: Prometheus Alert Rules
    include_tasks: Prometheus/add_alert_rules.yml
    # See vars for files used

  - name: Prometheus Recording Rules
    include_tasks: Prometheus/add_recording_rules.yml
    # See vars for files used

  - name: Setup Promtheus Config Files
    include_tasks: Prometheus/add_prometheus_config_files.yml


####################
#     THANOS       #
####################
- name: Setup Thanos
  block:
    - name: Thanos Directories
      include_tasks: Thanos/setup_thanos_directories_tasks.yml
  
    - name: Thanos Configs
      include_tasks: Thanos/add_thanos_config_templates_tasks.yml
      # See vars for templates used

####################
# SNMP EXPORTER    #
####################
- name: Setup SNMP Exporter
  block:
    - name: SNMP Directories
      include_tasks: SNMPExporter/setup_snmp_directories_tasks.yml

    # Changed to use fragments. see below.
    # - name: SNMP Config 
    #   include_tasks: SNMPExporter/add_snmp_config_templates_tasks.yml

    - name: SNMP Config from fragments 
      include_tasks: SNMPExporter/combine_snmp_config_task.yml
      
####################
# BLACKBOX EXPORTER #
####################
- name: Setup Blackbox EXPORTER
  block:
    - name: Blackbox Directories 
      include_tasks: Blackbox/setup_blackbox_directories_tasks.yml

    - name: Blackbox Config 
      include_tasks: Blackbox/config_blackbox_tasks.yml


####################
#     NGINX        #
####################
- name: Setup Nginx
  block:
    # Directories
    - name: Nginx Directories
      include_tasks: Nginx/setup_nginx_directories_tasks.yml

    # Config files
    - name: Nginx Configs
      include_tasks: Nginx/config_nginx_tasks.yml
      # vars: 
      #       nginx_template_dir: "{{ nginx_config_template_dir }}"
          
    # Add user to htaccess file
    # note htpasswd requires passlib to be installed on remote
    ## No longer needed since access is local host only 
    #- name: Nginx htaccess user
    #  include_tasks: Nginx/add_user_to_htaccess_tasks.yml
      #var: need vars set in sensitive file
      #fabric_prometheus_ht_user: & fabric_prometheus_ht_password: 

    # Confd server files
    - name: Nginx Add Confd  Files
      include_tasks: Nginx/confd_nginx_tasks.yml
      # vars: 
      #   nginx_template_dir: "{{ nginx_confd_template_dir }}"

  when: true


##############################
#  Create Docker Compose     #
##############################

- name: Add Docker Compose file 
  block:
    - name: Create docker-compose.yml 
      template:
        src: "templates/DockerCompose/docker_compose_complete.yml.j2"
        dest: "{{ base_install_dir }}/docker-compose.yml"
  become: yes

##############################
#  Start Docker Compose      #
##############################

- name: Start Docker Compose 
  block:
  - name: Start Docker compose file
    shell: docker-compose up -d
    args:
      chdir: "{{ base_install_dir }}"

