---
# Start-stop Prometheus container
- name: Control Prometheus Docker Container
  become: yes 
  community.docker.docker_container:
    state: "{{ prometheus_state }}"
    name: "{{ install_name }}_prometheus"
    network_mode: "{{ docker_network_name }}"
    #image: prom/prometheus:v2.23.0
    image: prom/prometheus:v2.33.4
    # TODO revisit/document user settings for this container
    user: 0:0
    volumes:      
      # config files
      - "{{ base_install_dir }}/prometheus/config:/etc/prometheus/config/"
      # secret files
      - "{{ base_install_dir }}/prometheus/secrets:/etc/prometheus/secrets/"
      # TSDB, WAL, chunks
      - "{{ base_data_dir }}/prometheus:/prometheus"
    # ports: 
    #   - 9090:9090
    
    container_default_behavior: no_defaults
    log_driver: json-file
    log_options:
      max-size: 1024m

    etc_hosts:
      "{{ extra_node_hosts  | default(omit) }}"

      
      
    command:
      - '--config.file=/etc/prometheus/config/prometheus_config.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.min-block-duration=2h'
      - '--storage.tsdb.retention.time={{prometheus_retention_time | default("15d")}}'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
      # breaks connection to sidecar - '--web.external-url={{ ansible_host }}'  # This maybe correct for fabric racks etc, but maybe not for other cases
    restart_policy: always

# - name: Print the extra_node_hosts
#   debug:
#     var: extra_node_hosts
