---
# Central Thanos - Query
# Only needs to be run on central node or similar node that needs to connect
#   to the rack promethice to get the current data and to the s3 for 
#   long term data.
# In this case there needs to be a root ca to contact remote stores with TLS.
#   I couldn't get thanos to work without verifying server certs.
- name: Control Thanos Query Container
  become: yes
  community.docker.docker_container:
    state: "{{ thanos_query_state }}"
    name: "{{ install_name }}_thanos_query"
    network_mode: "{{ docker_network_name }}"  
    #image: quay.io/thanos/thanos:v0.14.0
    image: quay.io/thanos/thanos:v0.25.0
    volumes:
      # Map root ca for client certification.
      - "{{ thanos_query_root_ca }}:/etc/thanos_certs/root-ca"
      # Map stores.yml file with the list of stores for easier live updates.
      - "{{ base_install_dir }}/thanos/config/stores.yml:/etc/thanos_stores/stores.yml"
    container_default_behavior: no_defaults
    log_driver: json-file
    log_options:
      max-size: 1024m
    command:
        - 'query'
        # grpc is not needed, but could be used by a remote system
        #- '--grpc-address=0.0.0.0:10921'
        # http called by grafana for datasource
        - '--http-address=0.0.0.0:10922'
        - '--query.replica-label=replica'
        # Connect to local and remote stores. Automatically check stores config file for updates.
        - '--store.sd-files=/etc/thanos_stores/stores.yml'
        - '--store.sd-interval=5m'
        # Handle certs
        - '--grpc-client-tls-secure'  # use tls to talk to remote store server
        - '--grpc-client-tls-ca=/etc/thanos_certs/root-ca' # root ca for verifying remote server. I was unable to get igore to work so we must have root ca for all TLS servers. Just combine into a single file if more than one. This makes selfsigned certs pretty much unusable.
        # Optional debuging
        - '--log.level=info'  # debug, info
        - '--log.format=json' # logfmt logfmt or json                          

    restart_policy: always 

    # Thanos needs to make calls to sidecar and store via host node for the central node. 
    # I can use the self-signed cert if we give the host name.
    etc_hosts:
      "{{ thanos_extra_node_hosts  | default(omit) }}"

      